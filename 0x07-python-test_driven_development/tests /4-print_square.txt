====================================
Test Cases for 4-print_square
==================================== 

This module define 1 function called ``print_square(size)`` that prints a square
in the form of rows and columns consisting of '#'

Possible Cases

- Pass size of type int
- pass size of type float
- pass size of value < 0 and value == 0
- pass size of type float and value less than 0
- pass size of value inf
- don't pass any arguments

===========
Usage
===========

pass size of type int

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(3)
    ###
    ###
    ###

pass size of value 0, it should print nothing
    >>> print_square(0)

pass size of type other than int, it throws a typeError

    >>> print_square(1.0)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square("hi")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([3])
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square({'size': 3})
    Traceback (most recent call last):
    TypeError: size must be an integer

passing negative value

    >>> print_square(-3)
    Traceback (most recent call last):
    ValueError: size must be >= 0

passing negative float value

    >>> print_square(-3.4)
    Traceback (most recent call last):
    TypeError: size must be an integer

if no arguments are provided, the function fails and raises an error.

	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'
