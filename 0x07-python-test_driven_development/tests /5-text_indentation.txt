====================================
Test Cases for 5-text_indentation
==================================== 

This module define 1 function called ``text_indentation(text)`` that prints a texts followed by 2 new lines
for each ". ? :" encountered, also trims whitespace from the string

Possible Cases

- Pass normal text
- pass text with leading whitespace
- pass text with trailing whitespace
- pass text with . or ? or : in it
- pass an empty string
- pass text with new line in the middle
- pass any type other than string
- don't pass any arguments


=====
Usage
=====

normal text

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hello World!")
    Hello World!

text with leading whitespace
    >>> text_indentation("    Hello  World")
    Hello  World

text with trailing whitespace
    >>> text_indentation("Hello World.   ")
    Hello World.
    <BLANKLINE>

text with a dot or question mark or colon

    >>> text_indentation("Hello? Who are you? I got this message: \"take heed\".")
    Hello?
    <BLANKLINE>
    Who are you?
    <BLANKLINE>
    I got this message:
    <BLANKLINE>
    "take heed".
    <BLANKLINE>

empty string or string filled with spaces
 
    >>> text_indentation("")

    >>> text_indentation("            ")

    
passing new lines are interpreted normally

    >>> text_indentation("My name is\n Tony")
    My name is
    Tony

    >>> text_indentation("   \n\nHey\nThere.")
    <BLANKLINE>
    <BLANKLINE>
    Hey
    There.
    <BLANKLINE>

Complex Text

    >>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
    ... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
    ... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
    ... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
    ... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
    ... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
    ... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
    ... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
    ... beatiorem! Iam ruinas videres""")
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres


==========
Exceptions
==========

a TypeError is thrown, for any type other than string

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string


    >>> text_indentation(29)
    Traceback (most recent call last):
    TypeError: text must be a string


    >>> text_indentation(("hey", "hi"))
    Traceback (most recent call last):
    TypeError: text must be a string


    >>> text_indentation({"greetings": "hi"})
    Traceback (most recent call last):
    TypeError: text must be a string

if no input is given, the function fails

    >>> text_indentation()
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'text'
